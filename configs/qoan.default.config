
#[  QOAN DEFAULT CONFIG FILE
#[

# SETTINGS FOR ALL DYSGASMIA APPS, local configs can override.
uri_source_header : redirect_url

[ directory ]
	css : /home/public/css/
	js  : /home/public/js/
	tmp : /home/tmp/
[/directory ]


[ http_debug ]
	request_param : debug
	request_value : http
	view          : debug_report
[/http_debug ]


[ alert_on_error:email ]
	from    : Dysgasmia Qoan <administrator@dysgasmia.net>
	to      : sean.standish@gmail.com
	subject : Error on Qoan Request Handling
	helper  : SendEmail
[/alert_on_error:email ]


#[ suppress_errors ]
#	"Subroutine Qoan::Controller::_view_cleanup redefined at /home/protected/Qoan/Interface.pm line 116."
#	"Filehandle STDERR reopened as HEYA only for input at /home/protected/Qoan/Logger.pm line 167."
#	Subroutine main::controller redefined at /home/protected/Qoan/RequestManager.pm line 471.
#[/suppress_errors ]


#[  DEFAULT QOAN VIEW RENDERER parameters
#[
#[ renderer_parameters ]
#	cache_expiration : 10  # minutes
#	max_passes : 15
#[/renderer_parameters ]



#[  CONFIG VALUES NOT SET UP BY FILE
#

#[  The "main_*" values allow the controller to know what the calling package is,
#[  and where the calling file is.  These are created on instantiation, and referenced
#[  here only for the purposes of documentation.
#
#	main_caller
#	main_file
#	main_path

#[  The following are values used in the functional env and so these names may not be
#[  used in a config file.
#
#	ok
#	errs (array)
#	request_stage

#[  MATCHING AM ROUTE is the regular expression that had the first match on the request URI.
#
#	matching_action_manager_route

#[  ACTIVE ACTION MANAGER is the request's action manager, when dynamically determined.
#
#	active_action_manager



#[  ASSORTED SETTINGS
#

#[  SESSION ID NAME is the name (key) for the session ID stored in the request cookie.
#[  Alternately, the keyname could be determined according dynamically within the session
#[  component's _before_load routine.
#
#	sessionid_variable : qoan_session

#[  USER ID NAME is the name (key) for the user account.  For the basic installation, this
#[  will be found in the session file.
#
#	userid_variable    : qoan_user

#[  DEFAULT VIEW is the view used by the Request Manager should the action's view determination
#[  fail in some way.
#
#	default_view   : ???



#[  COMPOUND KEY/ARRAY OR HASH SETTINGS
#

#[  DEFAULT ROUTE is the regular expression used to determine the requested action
#[  manager when the list of action manager routes is not populated.
#[  The request manager turns :string_name into (\w+).
#
#	default_route: ^/?:action_manager/:action


#[  ACTION_STAGES are the stages of processing for a request's action.
#[   identify determines the action routine to use;
#[   validate executes zero or more environmental checks or setup routines;
#[   execute runs the action routine proper;
#[   cleanup is to run after the action.
#
# [ action_stages ]
#	identify
#	check
#	execute
#	cleanup
# [/action_stages ]


#[  PROTECTED is a list of packages which are given security status "protected".
#[  These default to the RequestManager package; and, dynamically determined, the
#[  class of the controller object, which can be of another class, e.g. the Controller
#[  class or an inheriting class.
#
# [ protected ]
#	Qoan::RequestManager
#	Qoan::Controller
# [/protected ]


#[  COMPONENT settings for components which the Request Manager sets up in order to
#[  establish context for executing the requested action.  The default components
#[  are request, session, user, and view.  (Components necessary for execution of
#[  the requested action are the responsiblity of the action routines.)
#[
#[  The INIT setting is for load routines to store constructor arguments.  These
#[  could be put here (or in a separate "component:[name]:init" section) for 
#[  components which will have static constructor arguments (e.g. the request).
#[
#[  The STORE setting is the directory for file-based storage.
#[
#[  Other settings could be added for use by load routines as needed.
#
# [ component:request ]
#	module: CGI::Minimal
#	interface: Qoan::Interface::DefaultRequest
#	init: 
# [/component:request ]
#
# [ component:session ]
#	module: Qoan::Model::Minicache
#	interface: Qoan::Interface::DefaultSession
#	store: sessions/
# [/component:session ]
#
# [ component:user ]
#	module: Qoan::Model::Minicache
#	interface: Qoan::Interface::DefaultUser
#	store: users/
# [/component:user ]
#


#[  COMPONENT LOAD ORDER
#
# [ component_load_order ]
#	request
#	session
#	user
# [/component_load_order ]


#[  COMPONENT UNLOAD ORDER
#[  By default this reverses the previous load order.
#
# [ component_unload_order ]
#	user
#	session
#	request
# [/component_unload_order ]


#[  CLOSURE ACCESSORS is a whitelist of subroutines allowed to call the main closure.
#
# [ closure_accessors ]
#	Qoan::RequestManager::action_map
#	Qoan::RequestManager::component
#	Qoan::RequestManager::env
#	Qoan::RequestManager::errs
#	Qoan::RequestManager::ok
#	Qoan::RequestManager::response
#
#[ Component accessors are added to the list dynamically.
#	Qoan::Interface::Request::accessor
#	Qoan::Interface::Session::accessor
#	Qoan::Interface::User::accessor
#
# [/closure_accessors ]


#[  ACTION MANAGER ROUTES is a list of regular expressions used by the
#[  Request Manager to determine which action manager the request is for,
#[  if the execute action stage begins and no action map is loaded.
#
# [ action_manager_routes ]
#	action_manager_module : regular_expression  # FORMAT
#	Cart : ^/?shopping_cart
# [/action_manager_routes ]



#[  Other settings ??
#
#  view_cache (empty == false)
#  view_cache_namespace (Qafe_Controller_Views)
#  view_cache_default_expiration (10 min)
#  object_cache (empty == false)
#  object_cache_namespace (Qafe_Controller_Objects)
#  object_cache_default_expiration (10 min)

#  use_internal_warning_handler (1)
#  use_internal_die_handler (1)
#  warning_handler (_handler_warn)
#  die_handler (_handler_die)
